datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator db {
  provider = "go run github.com/steebchen/prisma-client-go"
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  bio       String?
  avatar    String?
  firstName String
  lastName  String
  posts     Post[]
  likes     Like[]
  comments  Comment[]
  followers Follows[] @relation("FollowersRelation")
  following Follows[] @relation("FollowingRelation")
  Tag       Tag[]
}

model Post {
  id           String      @id @default(cuid())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  title        String
  description  String?
  longitude    Float
  latitude     Float
  pictures     String[]
  city         String
  userId       String
  user         User        @relation(fields: [userId], references: [id])
  likes        Like[]
  comments     Comment[]
  tags         Tag[]
  restaurantId String? // It is optional if the user add in the resturant , we will be able to search posts regarding this resturant
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
}

model Comment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Like {
  id     String @id @default(cuid())
  postId String
  post   Post   @relation(fields: [postId], references: [id])
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Tag {
  id     String @id @default(cuid())
  postId String
  post   Post   @relation(fields: [postId], references: [id])
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Follows {
  id          String @id @default(cuid())
  followerId  String
  follower    User   @relation("FollowersRelation", fields: [followerId], references: [id])
  followingId String
  following   User   @relation("FollowingRelation", fields: [followingId], references: [id])
}

model Restaurant {
  id        String   @id @default(cuid())
  name      String
  address   String
  city      String
  state     String
  zipCode   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}
